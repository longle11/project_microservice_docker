version: "2"

networks:
  kong-net:
    external: false
services:
  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    container_name: kong-db
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    networks:
      - kong-net
    volumes:
      - /root/docker-compose/kong/db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  #######################################
  # Kong database migration
  #######################################
  kong-migrations:
    image: kong:latest
    command: kong migrations bootstrap && kong migrations up && kong migrations finish
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
      KONG_CASSANDRA_CONTACT_POINTS: kong-database
    networks:
      - kong-net
    restart: on-failure
    links:
      - kong-database:kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:latest
    container_name: kong-api
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
      KONG_CASSANDRA_CONTACT_POINTS: kong-database
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    networks:
      - kong-net
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
  konga-prepare:
    image: pantsel/konga
    container_name: konga-prepare
    command: "-c prepare -a postgres -u postgresql://kong:kong@kong-database:5432/konga"
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - kong-database
    links:
      - kong-database:kong-database
  konga:
    image: pantsel/konga
    container_name: konga
    restart: on-failure
    depends_on:
      - kong-database
    networks:
      - kong-net
    links:
      - kong-database:kong-database
    environment:
      DB_ADAPTER: postgres
      DB_URI: postgresql://kong:kong@kong-database:5432/konga
      NODE_ENV: production
    ports:
      - "1000:1337"
  #######################################
  # Microservice Client
  #######################################
  client-srv:
    build:
      dockerfile: Dockerfile
      context: ./client
    networks:
      - kong-net
    restart: on-failure
    volumes:
      - /app/node_modules
      - ./client:/app

  #######################################
  # Nats Streaming Server
  #######################################
  nats-srv:
    image: nats-streaming:0.25.6-alpine3.18
    container_name: nats-srv
    networks:
      - kong-net
    command:
      [
        "-p",
        "4222",
        "-m",
        "8222",
        "-hbi",
        "5s",
        "-hbt",
        "5s",
        "-hbf",
        "2",
        "-SD",
        "-cid",
        "jiraproject",
      ]
    ports:
      - "4222:4222"
      - "8222:8222"

  #######################################
  # DB for Microservices
  #######################################

  auth-mongo-srv:
    image: mongo:latest
    container_name: auth-mongo-srv
    networks:
      - kong-net
    volumes:
      - ./db_data/:/data/db/
  category-mongo-srv:
    image: mongo:latest
    container_name: category-mongo-srv
    networks:
      - kong-net
    volumes:
      - ./db_data/:/data/db/
  comment-mongo-srv:
    image: mongo:latest
    container_name: comment-mongo-srv
    networks:
      - kong-net
    volumes:
      - ./db_data/:/data/db/
  issue-mongo-srv:
    image: mongo:latest
    container_name: issue-mongo-srv
    networks:
      - kong-net
    volumes:
      - ./db_data/:/data/db/
  projectmanagement-mongo-srv:
    image: mongo:latest
    container_name: projectmanagement-mongo-srv
    networks:
      - kong-net
    volumes:
      - ./db_data/:/data/db/

  #######################################
  # Microservice Backend
  #######################################
  auth-srv:
    build:
      dockerfile: Dockerfile
      context: ./auth
    container_name: auth-srv
    networks:
      - kong-net
    restart: on-failure
    volumes:
      - /app/node_modules
      - ./auth:/app
    environment:
      MONGO_URL: mongodb://auth-mongo-srv:27017/auth
      NATS_CLUSTER_ID: jiraproject
      NATS_CLIENT_ID: auth_srv
      NATS_URL: http://nats-srv:4222
      JWT_KEY: longle
  category-srv:
    build:
      dockerfile: Dockerfile
      context: ./category
    container_name: category-srv
    volumes:
      - /app/node_modules
      - ./category:/app
    networks:
      - kong-net
    environment:
      MONGO_URL: mongodb://category-mongo-srv:27017/category
      NATS_CLUSTER_ID: jiraproject
      NATS_CLIENT_ID: category_srv
      NATS_URL: http://nats-srv:4222
      JWT_KEY: longle
    restart: on-failure
  comment-srv:
    build:
      dockerfile: Dockerfile
      context: ./comment
    container_name: comment-srv
    volumes:
      - /app/node_modules
      - ./comment:/app
    networks:
      - kong-net
    environment:
      MONGO_URL: mongodb://comment-mongo-srv:27017/comment
      NATS_CLUSTER_ID: jiraproject
      NATS_CLIENT_ID: comment_srv
      NATS_URL: http://nats-srv:4222
      JWT_KEY: longle
    restart: on-failure
  issue-srv:
    build:
      dockerfile: Dockerfile
      context: ./Issue
    container_name: issue-srv
    volumes:
      - /app/node_modules
      - ./issue:/app
    networks:
      - kong-net
    environment:
      MONGO_URL: mongodb://issue-mongo-srv:27017/issue
      NATS_CLUSTER_ID: jiraproject
      NATS_CLIENT_ID: issue_srv
      NATS_URL: http://nats-srv:4222
      JWT_KEY: longle
    restart: on-failure
  projectmanagement-srv:
    build:
      dockerfile: Dockerfile
      context: ./ProjectManagement
    container_name: projectmanagement
    volumes:
      - /app/node_modules
      - ./projectmanagement:/app
    networks:
      - kong-net
    environment:
      MONGO_URL: mongodb://projectmanagement-mongo-srv:27017/projectmanagement
      NATS_CLUSTER_ID: jiraproject
      NATS_CLIENT_ID: projectmanagement_srv
      NATS_URL: http://nats-srv:4222
      JWT_KEY: longle
    restart: on-failure
